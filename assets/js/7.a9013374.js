(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{230:function(e,t,a){"use strict";a.r(t);var s=a(0),i=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("The following are overviews of the in-class examples, which were presented in class.")]),e._v(" "),a("h2",{attrs:{id:"week-2-deck-of-cards"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#week-2-deck-of-cards","aria-hidden":"true"}},[e._v("#")]),e._v(" Week 2: Deck of Cards "),a("Badge",{attrs:{vertical:"middle",text:"Coming Soon"}})],1),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("In-Class Exercise")]),e._v(" "),a("p",[e._v("Creating all 52 cards of a standard deck with HTML would be tedious, but we could accomplish the task much faster with PHP.")]),e._v(" "),a("p",[e._v("Using what you have learned about arrays, loops, and generating HTML with PHP to create all a deck of cards.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/MTM6331/deck-starter",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fork on GitHub"),a("OutboundLink")],1),e._v(" | "),a("a",{attrs:{href:"https://github.com/MTM6331/deck",target:"_blank",rel:"noopener noreferrer"}},[e._v("View completed version"),a("OutboundLink")],1)])]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Week 3")]),e._v(" "),a("h3",{attrs:{id:"clue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clue","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("router-link",{attrs:{to:"./week3/"}},[e._v("Clue")])],1),e._v(" "),a("p",[e._v("It's the Return of Clue! In this simplified version of Clue the player will search for clues in each room in the Mansion.")]),e._v(" "),e._m(1),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/MTM6331/clue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fork on GitHub"),a("OutboundLink")],1),e._v(" | "),a("a",{attrs:{href:"https://github.com/MTM6331/clue-final",target:"_blank",rel:"noopener noreferrer"}},[e._v("View completed version"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"week-4-blacksmith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#week-4-blacksmith","aria-hidden":"true"}},[e._v("#")]),e._v(" Week 4: Blacksmith "),a("Badge",{attrs:{vertical:"middle",text:"Coming Soon"}})],1),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("In-Class Exercise")]),e._v(" "),a("p",[e._v("Create a text-based Blacksmith game using functions, conditional statements, HTTP variables, and PHP includes.")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/MTM6331/blacksmith",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fork on GitHub"),a("OutboundLink")],1),e._v(" | "),a("a",{attrs:{href:"https://github.com/MTM6331/blacksmith-final",target:"_blank",rel:"noopener noreferrer"}},[e._v("View Completed Version"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"week-5-designing-blacksmith-db"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#week-5-designing-blacksmith-db","aria-hidden":"true"}},[e._v("#")]),e._v(" Week 5: Designing Blacksmith DB "),a("Badge",{attrs:{vertical:"middle",text:"Coming Soon"}})],1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),a("p",[e._v("Moving the Blacksmith game data to a database will give new abilities that are not possible with using session alone. For example, players will be able to continue game play even after the browser is close or play the same game across multiple browsers and devices. Players will also be able to have multiple different games all at the same time. But before we jump write into writing the PHP and SQL to make that happen, it is important that we plan out what the database should look like.")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("From the description of the problem we can see that we will need at least 4 different tables for our Blacksmith database. Now, the columns of each table and the relationships between the tables can be worked out by creating a Database Model.")]),e._v(" "),e._m(7),e._v(" "),a("p",[e._v("Creating a database model is actually pretty straight forward, and while there are plenty of options for database modelling software, like "),a("a",{attrs:{href:"https://about.draw.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("draw.io"),a("OutboundLink")],1),e._v(", a database model can just as easily done using a pen and paper.")]),e._v(" "),a("p",[e._v("Traditionally, in a database model tables are represented as rectangles with the name of the table.")]),e._v(" "),e._m(8)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"in-class-exercises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-class-exercises","aria-hidden":"true"}},[this._v("#")]),this._v(" In-Class Exercises")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Using what we have learned about PHP associative arrays, loops, conditional statements, and the "),t("code",[this._v("$_GET")]),this._v(" variable, we will create a simplified version of Clue.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("In-Class Exercise")]),this._v(" "),t("p",[this._v("It's time to take the Blacksmith game to the next level, by moving the data from the session to a database. But before we can do that, we need to first design it.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[this._v("#")]),this._v(" Introduction")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Database Designing or Modelling is like creating a wireframe or mockup for a website. It gives the blueprint for database. This crucial with a database, because while it possible to make changes to a database after it has been deployed, it is "),t("strong",[this._v("HIGHLY")]),this._v(" discouraged. So it is important to carefully think about the problem and plan out all the needs for database before ever writing any code.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"understanding-the-problem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#understanding-the-problem","aria-hidden":"true"}},[this._v("#")]),this._v(" Understanding the Problem")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("The database for Blacksmith will need to keep track of each "),a("code",[e._v("game")]),e._v(" and all of the "),a("code",[e._v("inventory")]),e._v(" items for each game. It should also have a record of each "),a("code",[e._v("item")]),e._v(" that can be bought, made or sold as well as the "),a("code",[e._v("requirements")]),e._v(" to complete the transaction to buy, make, and sell each item.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"creating-a-database-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-database-model","aria-hidden":"true"}},[this._v("#")]),this._v(" Creating a Database Model")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"/images/exercises/blacksmith-db-1.png",alt:"First step for Blacksmith DB Model"}})])}],!1,null,null,null);i.options.__file="README.md";t.default=i.exports}}]);