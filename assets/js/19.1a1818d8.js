(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{218:function(a,t,e){"use strict";e.r(t);var s=e(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"php-variables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#php-variables","aria-hidden":"true"}},[a._v("#")]),a._v(" PHP Variables")]),a._v(" "),e("h2",{attrs:{id:"creating-php-variables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-php-variables","aria-hidden":"true"}},[a._v("#")]),a._v(" Creating PHP Variables")]),a._v(" "),e("p",[a._v("Variables in PHP are just like variables in Javascript. They can be of different types of data saved in the variables - Strings, Booleans, Numbers, Dates, or Arrays. All variable names start with a dollar sign.")]),a._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[a._v("Note")]),a._v(" "),e("p",[a._v("There is NO keyword "),e("code",[a._v("var")]),a._v(" in PHP.")])]),a._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v(" \n  "),e("span",{attrs:{class:"token variable"}},[a._v("$name")]),a._v(" "),e("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{attrs:{class:"token double-quoted-string string"}},[a._v('"John"')]),e("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n  "),e("span",{attrs:{class:"token variable"}},[a._v("$age")]),a._v(" "),e("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{attrs:{class:"token number"}},[a._v("33")]),e("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),e("span",{attrs:{class:"token delimiter important"}},[a._v("?>")])]),a._v("\n")])])]),e("p",[a._v("The above example creates two variables - one called "),e("code",[a._v("$name")]),a._v(" and one called "),e("code",[a._v("$age")]),a._v(". If you want to change the contents of a variable then you would write the same thing as you would to create the variable.")]),a._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v(" \n  "),e("span",{attrs:{class:"token variable"}},[a._v("$age")]),a._v(" "),e("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{attrs:{class:"token number"}},[a._v("34")]),e("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),e("span",{attrs:{class:"token delimiter important"}},[a._v("?>")])]),a._v("\n")])])]),e("p",[a._v("Now the value inside the variable "),e("code",[a._v("$age")]),a._v(" is 34 instead of 33.")]),a._v(" "),e("h2",{attrs:{id:"retrieving-php-variables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#retrieving-php-variables","aria-hidden":"true"}},[a._v("#")]),a._v(" Retrieving PHP Variables")]),a._v(" "),e("p",[a._v("To the value stored inside of a PHP Variable, you simple call the variable name.")]),a._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v(" "),e("span",{attrs:{class:"token variable"}},[a._v("$name")]),e("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{attrs:{class:"token delimiter important"}},[a._v("?>")])]),a._v("\n")])])]),e("p",[a._v("However, this only retrieve the variable value inside of PHP. No content will be displayed in the browser. If we want to write out the value of the variable $name then you can use the echo statement.")]),a._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v(" "),e("span",{attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),e("span",{attrs:{class:"token variable"}},[a._v("$name")]),e("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{attrs:{class:"token delimiter important"}},[a._v("?>")])]),a._v("\n")])])]),e("h2",{attrs:{id:"deleting-a-php-variable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deleting-a-php-variable","aria-hidden":"true"}},[a._v("#")]),a._v(" Deleting a PHP Variable")]),a._v(" "),e("p",[a._v("If you ever want to delete a variable there is a function called "),e("code",[a._v("unset()")]),a._v(" that will let you destroy a variable.")]),a._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{attrs:{class:"token php language-php"}},[e("span",{attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v(" \n  "),e("span",{attrs:{class:"token function"}},[a._v("unset")]),e("span",{attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{attrs:{class:"token variable"}},[a._v("$age")]),e("span",{attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),e("span",{attrs:{class:"token delimiter important"}},[a._v("?>")])]),a._v("\n")])])]),e("p",[a._v("The above example is destroying the variable "),e("code",[a._v("$age")]),a._v(".")])])}],!1,null,null,null);n.options.__file="php-variables.md";t.default=n.exports}}]);